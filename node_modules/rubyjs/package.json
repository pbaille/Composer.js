{
  "name": "rubyjs",
  "version": "0.7.2",
  "description": "JavaScript standard library (String, Array, etc) based on Ruby core-lib.",
  "keywords": [],
  "author": {
    "name": "Sebastian Burkhard",
    "email": "info@rubyjs.org"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/rubyjs/core-lib.git"
  },
  "main": "index",
  "homepage": "http://rubyjs.org",
  "contributors": [
    {
      "name": "Sebastian Burkhard",
      "email": "info@rubyjs.org"
    }
  ],
  "bugs": {
    "url": "https://github.com/rubyjs/core-lib/issues",
    "email": "info@rubyjs.org"
  },
  "dependencies": {},
  "devDependencies": {},
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/rubyjs/core-lib/raw/master/LICENSE"
    }
  ],
  "scripts": {},
  "readme": "# RubyJS\n\nRubyJS is a port of the Ruby core-lib and provides many methods for Array, String, Numerics and more. RubyJS classes are simple wrappers around native JavaScript objects.\n\nSee [RubyJS Homepage](http://www.rubyjs.org) for more details. It is licensed under MIT.\n\n## Contribute/Develop\n\nRubyJS is currently implemented in CoffeeScript 1.3.3. CoffeeScript 1.4.0 doesn't work as of now. It's on the roadmap to move away from CoffeeScript to plain JS.\n\n- Clone repository\n- Run the coffee console loading the rubyjs files:\n\n```\n/path/to/rubyjs $ coffee -r ./ruby.coffee\ncoffee> R('hello world').capitalize()\n\"Hello World\"\ncoffee> R('hello world').capitalize().toNative()\n'Hello world'\n```\n\n- Setup development environment:\n\n```\n$ bundle install\n$ cake build_tests            # compiles all test files\n$ bundle exec guard           # automatically compile coffeescript\n$ rake jasmine                # starts jasmine server\n$ open http://localhost:8888  # pray\n```\n\nIf you get the error: pipe(): Too many open files, see following page:\n\nhttps://github.com/jashkenas/coffee-script/issues/1537\n\nFor Mac OS X users the following comment helps:\n\nhttps://github.com/joyent/node/issues/2479#issuecomment-7082186\n\n\n\n## API Docs\n\nYou can quickly search and jump through the documentation by using the fuzzy finder dialog:\n\nOpen fuzzy finder dialog: `Ctrl-T`\n\nIn frame mode you can toggle the list naviation frame on the left side:\n\nToggle list view: `Ctrl-L`\n\nYou can focus a list in frame mode or toggle a tab in frameless mode:\n\n- Class list: `Ctrl-C`\n<!-- - Mixin list: `Ctrl-I` -->\n<!-- - File list: `Ctrl-F` -->\n- Method list: `Ctrl-M`\n- Extras list: `Ctrl-E`\n\nYou can focus and blur the search input:\n\n- Focus search input: `Ctrl-S\n- Blur search input: `Esc`\n- In frameless mode you can close the list tab: `Esc`\n\n## Namespace\n\n`RubyJS` is the official namespace of all classes and mixins. `R` is an alias to `RubyJS`. In the documentation both versions are used interchangeably.\n\n    RubyJS('foo')\n    RubyJS.String\n    RubyJS.Array\n    // Equivalent to:\n    R('foo')\n    R.String\n    R.Array\n\n`R` additionaly includes R.Kernel, so methods defined there can be used with R.\n\n    R.puts('hello world')\n\n## String\n\nRubyJS.String wraps a native String primitive.\n\n    R('foo')\n    new R.String('foo')\n    R.String.new('foo')\n    R.$String(1) // Emulates Ruby String(1)\n\nDestructive methods have a _bang suffix.\n\n    str = R('foo')\n    str.capitalize()      //=> 'Foo'\n    str                   //=> 'foo'\n    str.capitalize_bang() //=> 'Foo'\n    str                   //=> 'Foo'\n\nCreate multiple R.Strings with `R.w` equivalent to Ruby `%w[]`.\n\n    words = R.w('foo bar baz')\n\n\n## Array\n\nArrays are ordered, integer-indexed collections of any object. Array indexing starts at 0, as in C or Java. A negative index is assumed to be relative to the end of the arrayâ€”that is, an index of -1 indicates the last element of the array, -2 is the next to last element in the array, and so on.\n\nRubyJS.Array wraps a native JavaScript array. Members are not directly accessible using `[]` notation, use `RubyJS.Array.get(1)` and `set(1, 'foo')` instead.\n\nArray includes optimized versions of RubyJS.Enumerable methods.\n\n     R([1,2,3])           // => an R.Array of Number primitives\n     R([1,2,3], true)     // => an R.Array of R.Fixnums\n     new R.Array([1,2,3])\n\n\n## Enumerable, Enumerator\n\nThe Enumerable mixin provides collection classes with several traversal and searching methods, and with the ability to sort. The class must provide a method `each`, which yields successive members of the collection. If Enumerable#max, #min, or #sort is used, the objects in the collection must also implement a meaningful <=> operator, as these methods rely on an ordering between members of the collection.\n\nEnumerable is currently included in Array, Range and Enumerator. Array implements optimized versions of the methods.\n\n## Numerics\n\nNumeric and Integer are both modules. Functional number types are Fixnum (an Integer) and Float.\n\n- Fixnum includes Numeric, Integer\n- Float includes Numeric\n\nMathematic operations like +, -, * with RubyJS numerics is expensive as for every operation extra objects are created. It is suggested to use JavaScript native primitives for calculations, especially in loops.\n\n\n## Aliases\n\nWhere Ruby methods conflict with JavaScript naming the following aliases are used.\nYou can also use the old names through property the brackets, e.g. `['==']`.\n\n    str.equals('foo')\n    str['==']('foo')\n\n    # '?' is removed\n    include    : include?\n\n    # '!'' => _bang\n    upcase_bang: upcase!\n\n    append     : <<\n    equals     : ==\n    equal_case : ===\n    cmp        : <=>\n    lt         : <\n    lteq       : <=\n    gt         : >\n    gteq       : >=\n    modulo     : %\n    plus       : +\n    minus      : -\n    multiply   : *\n    exp        : **\n    divide     : /\n\n    # Typecasting:\n\n    R.$String(): String()\n    R.$Float() : Float()\n\n    # Special variables\n\n    R['$~']    : $~\n    R['$;']    : $;\n    R['$,']    : $,\n\n",
  "readmeFilename": "README.md",
  "_id": "rubyjs@0.7.2",
  "dist": {
    "shasum": "70a6420489cae2af5f0b8cf37e83886dc3fa5a80"
  },
  "_from": "rubyjs@",
  "_resolved": "https://registry.npmjs.org/rubyjs/-/rubyjs-0.7.2.tgz"
}
