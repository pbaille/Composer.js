// Generated by CoffeeScript 1.6.3
(function() {
  define(["lib/UIobjects/CycleButton", "vendors/ruby"], function() {
    var root;
    if (typeof global !== "undefined" && global !== null) {
      root = global;
    } else {
      root = window;
    }
    return root.RVS = (function() {
      function RVS(opt) {
        var b, buttons, el, i, _fn, _i, _len,
          _this = this;
        el = $(opt.el);
        el.addClass("rythmn_val_selector");
        el.html(window.JST['template_first']);
        buttons = el.find(".button");
        this.generator = opt.generator;
        this.buttons = {};
        this.table = {};
        _fn = function(b, i) {
          var button_value;
          button_value = $(b).attr("value");
          _this.buttons[button_value] = new PB.CycleButton({
            mother: b,
            items: ["", "", "", ""],
            values: [0, 1, 2, 3],
            colors: ["#423A38", "#BDB9B1", "#47B8C8", "#D7503E"],
            current: 0
          });
          return $(b).click(function() {
            _this.table[button_value] = _this.buttons[button_value].get_val();
            return _this.sync_generator();
          });
        };
        for (i = _i = 0, _len = buttons.length; _i < _len; i = ++_i) {
          b = buttons[i];
          _fn(b, i);
        }
        this.set_table(RVS.default_table);
        this.sync_generator();
      }

      RVS.default_table = {
        4: 1
      };

      RVS.prototype.set_table = function(obj) {
        this.table = obj;
        return this.refresh_buttons();
      };

      RVS.prototype.refresh_buttons = function() {
        var k, v, _ref, _results;
        _ref = this.table;
        _results = [];
        for (k in _ref) {
          v = _ref[k];
          _results.push(this.buttons[k].set_val(v));
        }
        return _results;
      };

      RVS.prototype.sync_generator = function() {
        return this.generator.rvs_sync(this.table);
      };

      return RVS;

    })();
  });

}).call(this);
