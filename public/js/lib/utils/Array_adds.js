// Generated by CoffeeScript 1.6.3
(function() {
  define(["vendors/ruby"], function() {
    _a.rotate = (function() {
      var splice, unshift;
      unshift = Array.prototype.unshift;
      splice = Array.prototype.splice;
      return function(arr, count) {
        var len, result;
        result = arr.slice(0);
        len = result.length >>> 0;
        count = count >> 0;
        unshift.apply(result, splice.call(result, count % len, len));
        return result;
      };
    })();
    _a.rotations = function(arr) {
      var result, x, _i, _ref;
      result = [];
      for (x = _i = 0, _ref = arr.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; x = 0 <= _ref ? ++_i : --_i) {
        result.push(_a.rotate(arr, x));
      }
      return _a.uniq(result);
    };
    _a.median = function(arr) {
      return _a.somme(arr) / arr.length;
    };
    _a.somme = function(arr) {
      return arr.reduce(function(previousValue, currentValue) {
        return previousValue + currentValue;
      });
    };
    _a.tonicize = function(arr) {
      var result,
        _this = this;
      result = arr.map(function(x) {
        return (x - arr[0] + 12) % 12;
      });
      return _a.sort(result);
    };
    _a.tonicized_rotations = function(arr) {
      return _a.rotations(arr).map(function(x) {
        return _a.tonicize(x);
      });
    };
    return _a.to_functs = function(arr) {
      return arr.map(function(i) {
        if (i) {
          return i % 12;
        } else {
          return i;
        }
      });
    };
  });

}).call(this);
