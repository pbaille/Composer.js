// Generated by CoffeeScript 1.6.3
(function() {
  define(['lib/utils/Rational', 'lib/core/base/Rval', 'vendors/ruby'], function() {
    var RVal, Rational;
    Rational = AC.Utils.Rational;
    RVal = AC.Core.RVal;
    return describe("Rval class", function() {
      var rv;
      rv = {};
      beforeEach(function() {
        return rv = new RVal(1, 2);
      });
      it("to_ms", function() {
        return expect(rv.to_ms(120)).toEqual(250);
      });
      it("polyrythmic_base", function() {
        return expect(rv.polyrythmic_base()).toBe(2);
      });
      describe("binary_base", function() {
        it("with binary val", function() {
          return expect(rv.binary_base()).toEqual(new Rational(1, 2));
        });
        return it("with polyrythmic val", function() {
          rv = new RVal(1, 10);
          return expect(rv.binary_base()).toEqual(new Rational(1, 2));
        });
      });
      return describe("allowed_subs", function() {
        it("with binary val", function() {
          return expect(rv.allowed_subs()).toEqual([1, 2]);
        });
        return it("with poly val", function() {
          rv = new RVal(1, 24);
          return expect(_a.sort(rv.allowed_subs())).toEqual(_a.sort([1, 2, 4, 8, 3, 6, 12, 24]));
        });
      });
    });
  });

}).call(this);
