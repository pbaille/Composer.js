// Generated by CoffeeScript 1.6.3
(function() {
  require.config({
    paths: {
      jquery: 'vendors/jquery-1.10.2.min',
      underscore: 'vendors/underscore',
      backbone: 'vendors/backbone'
    },
    shim: {
      underscore: {
        exports: '_'
      },
      backbone: {
        deps: ["underscore", "jquery"],
        exports: "Backbone"
      }
    }
  });

  window.AC = {};

  window.AC.Core = {};

  window.AC.MIDI = {};

  window.AC.Utils = {};

  window.AC.GUI = {};

  require(["lib/core/index", "lib/GUI/index", "lib/midi/index", "lib/utils/index", "jquery"], function() {
    window.rat = function(n, d) {
      return new AC.Utils.Rational(n, d);
    };
    return jQuery(function($) {
      var Bar, Mode, RGen2, RVal, TimeLine;
      window.rgen = new AC.Core.RGen({
        streamLen: rat(2, 1)
      });
      window.rythmnValSel = new AC.GUI.RVS({
        el: "#rvs",
        table: {
          4: 1,
          10: 1
        },
        generator: rgen
      });
      window.maestro = new AC.Core.Metronome({
        bpm: 100,
        beats: 5,
        unit: 4,
        listeners: [rgen],
        on_click: function() {
          return $('#tempo').html("" + (this.bars + '>' + this.count));
        }
      });
      RGen2 = AC.Core.RGen2;
      TimeLine = AC.Core.TimeLine;
      RVal = AC.Core.RVal;
      Mode = AC.Core.Mode;
      Bar = AC.Core.Bar;
      window.rgen2 = new RGen2({
        prob_array: [
          {
            rval: new RVal(1),
            occ: 1
          }, {
            rval: new RVal(1, 2),
            occ: 1
          }, {
            rval: new RVal(1, 3),
            occ: 1
          }, {
            rval: new RVal(1, 6),
            occ: 1
          }
        ],
        advance: new RVal(2)
      });
      return window.tl = new TimeLine({
        grid: [
          new Bar({
            beats: 4,
            beat_val: new RVal(1),
            bpm: 60,
            resolution: new RVal(1, 4),
            harmonic_directives: [
              {
                at: new RVal(0),
                mode: new Mode("C Lyd")
              }, {
                at: new RVal(2),
                mode: new Mode("Eb Lyd")
              }
            ]
          })
        ],
        cycle: true,
        rgen: rgen2
      });
    });
  });

}).call(this);
